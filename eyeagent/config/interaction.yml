# Example declarative interaction spec for EyeAgent
start: orchestrator
nodes:
  - id: orchestrator
    agent: orchestrator
    inputs: [images, patient]
    outputs:
      - { from: planned_pipeline, to: pipeline }
  - id: image_analysis
    agent: image_analysis
    inputs: [images, patient, orchestrator_outputs]
    outputs:
      - { from: quality, to: ia_quality }
      - { from: lesions, to: ia_lesions }
      - { from: diseases, to: ia_diseases }
  - id: specialist
    agent: specialist
    inputs: [images, patient, image_analysis, orchestrator_outputs]
    outputs:
      - { from: disease_grades, to: disease_grades }
  - id: follow_up
    agent: follow_up
    inputs: [patient, specialist]
    outputs:
      - { from: management, to: management }
  - id: report
    agent: report
    inputs: [image_analysis, specialist, follow_up]
    outputs:
      - { from: diagnoses, to: diagnoses }
      - { from: lesions, to: lesions }
      - { from: management, to: management }
      - { from: reasoning, to: reasoning }

edges:
  - from: orchestrator
    to:
      - when: { key: pipeline, op: exists }
        next: image_analysis
      - next: report
  - from: image_analysis
    to:
      - when: { key: pipeline, op: exists }
        next: specialist
      - next: report
  - from: specialist
    to:
      - when: { key: pipeline, op: exists }
        next: follow_up
      - next: report
  - from: follow_up
    to:
      - next: report
